{"ast":null,"code":"var _jsxFileName = \"/Users/sparshgupta/Desktop/cbn/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  /**const handleChange = (e) => {\n    this.setState({selectedValue: e.target.value})\n    var x,y,z, D, k;\n    x = document.getElementById('length').value;\n    console.log(x);\n    y = document.getElementById('width').value;\n    z = document.getElementById('height').value;\n    D = document.getElementById('measurement').value; //can be event.target.value\n    if(D === \"centi\"){\n      k = x*y*z;\n     document.getElementById('vol').value = k\n    }\n  }\n  <button style = {styling} onClick={reset}>Reset</button> //keeping a buttons element for ref\n  **/\n  const [length, setLength] = useState(0);\n  const [width, setWidth] = useState(0);\n  const [height, setHeight] = useState(0);\n  const [cubicVolume, setCubicVolume] = useState(length * width * height);\n  const [OptionValue, setOptionValue] = useState(\"\");\n  const [quantity, setQuantity] = useState(1);\n  const [cubicFeet, setCubicFeet] = useState(0);\n  const [volumeWeightAirKG, setVolumeWeightAirKG] = useState(0);\n  const [volumeWeightAirLB, setVolumeWeightAirLB] = useState(0);\n  const [volumeWeightSeaKG, setVolumeWeightSeaKG] = useState(0);\n  const [volumeWeightSeaLB, setVolumeWeightSeaLB] = useState(0);\n  const [radio, setRadio] = useState(\"\");\n  const data = [{\n    name: \"option1\",\n    info: [\"mm\", \"centi\", \"meter\"]\n  }, {\n    name: \"option2\",\n    info: [\"yard\", \"feet\", \"inches\"]\n  }];\n\n  const handleSelection = e => {\n    reset();\n    console.log(e.target.value);\n    var a = e.target.value;\n    setOptionValue(a);\n  };\n\n  const reset = () => {\n    setHeight(0);\n    setLength(0);\n    setWidth(0);\n    setCubicVolume(0);\n    setQuantity(1);\n    setOptionValue(\"\");\n  };\n\n  const styling = {\n    width: '20%',\n    padding: '12px',\n    margin: '8px',\n    boxSize: 'border-box',\n    align: 'center'\n  };\n\n  const calculate = () => {\n    if (OptionValue === \"mili\") {\n      let vol = length * width * height;\n      let convertMeter = 0.001 * 0.001 * 0.001;\n      let convertFeet = 0.0032 * 0.0032 * 0.0032;\n      let convertCentimeter = 0.1 * 0.1 * 0.1;\n      setCubicVolume(convertMeter * quantity * vol);\n      console.log(\"Cubic Volume mili \" + cubicVolume);\n      setCubicFeet(Math.round(convertFeet * quantity * vol));\n      setVolumeWeightAirKG(quantity * vol * convertCentimeter / 6000);\n      setVolumeWeightAirLB(quantity * vol * convertCentimeter / 6000 * 2.205);\n      setVolumeWeightSeaKG(quantity * vol * convertCentimeter / 1000);\n    }\n\n    if (OptionValue === \"centi\") {\n      let vol = length * width * height;\n      let convertMeter = 0.01 * 0.01 * 0.01;\n      let convertFeet = 0.032 * 0.032 * 0.032;\n      setCubicVolume(convertMeter * quantity * vol);\n      console.log(\"Cubic Volume centi \" + cubicVolume);\n      setCubicFeet(Math.round(convertFeet * quantity * vol));\n      setVolumeWeightAirKG(quantity * vol / 6000);\n      setVolumeWeightAirLB(quantity * vol / 6000 * 2.205);\n      setVolumeWeightSeaKG(quantity * vol / 1000);\n      setVolumeWeightSeaLB(quantity * vol / 1000 * 2.205);\n    }\n\n    if (OptionValue === \"meter\") {\n      let vol = length * width * height;\n      let convertCentimeter = 100 * 100 * 100;\n      let convertFeet = 3.281 * 3.281 * 3.281;\n      setCubicVolume(quantity * vol);\n      console.log(\"Cubic Volume meter \" + cubicVolume);\n      setCubicFeet(Math.round(convertFeet * quantity * vol));\n      setVolumeWeightAirKG(quantity * vol * convertCentimeter / 6000);\n      setVolumeWeightAirLB(quantity * vol * convertCentimeter / 6000 * 2.205);\n      setVolumeWeightSeaKG(quantity * vol * convertCentimeter / 1000);\n      setVolumeWeightSeaLB(quantity * vol * convertCentimeter / 1000 * 2.205);\n    }\n\n    if (OptionValue === \"inches\") {\n      let vol = length * width * height;\n      let convertCentimeter = 2.54 * 2.54 * 2.54;\n      let convertFeet = 0.08 * 0.08 * 0.08;\n      let convertMeter = 0.025 * 0.025 * 0.025;\n      setCubicVolume(quantity * vol * convertMeter);\n      console.log(\"Cubic Volume meter \" + cubicVolume);\n      setCubicFeet(Math.round(convertFeet * quantity * vol));\n      setVolumeWeightAirKG(quantity * vol * convertCentimeter / 6000);\n      setVolumeWeightAirLB(quantity * vol * convertCentimeter / 6000 * 2.205);\n      setVolumeWeightSeaKG(quantity * vol * convertCentimeter / 1000);\n      setVolumeWeightSeaLB(quantity * vol * convertCentimeter / 1000 * 2.205);\n    }\n\n    if (OptionValue === \"feet\") {\n      let vol = length * width * height;\n      let convertCentimeter = 30.48 * 30.48 * 30.48;\n      let convertMeter = 0.30 * 0.30 * 0.30;\n      setCubicVolume(quantity * vol * convertMeter);\n      console.log(\"Cubic Volume meter \" + cubicVolume);\n      setCubicFeet(Math.round(quantity * vol));\n      setVolumeWeightAirKG(quantity * vol * convertCentimeter / 6000);\n      setVolumeWeightAirLB(quantity * vol * convertCentimeter / 6000 * 2.205);\n      setVolumeWeightSeaKG(quantity * vol * convertCentimeter / 1000);\n      setVolumeWeightSeaLB(quantity * vol * convertCentimeter / 1000 * 2.205);\n    }\n\n    if (OptionValue === \"yard\") {\n      let vol = length * width * height;\n      let convertCentimeter = 91.44 * 91.44 * 91.44;\n      let convertMeter = 0.91 * 0.91 * 0.91;\n      let convertFeet = 3 * 3 * 3;\n      setCubicVolume(quantity * vol * convertMeter);\n      console.log(\"Cubic Volume meter \" + cubicVolume);\n      setCubicFeet(Math.round(quantity * vol * convertFeet));\n      setVolumeWeightAirKG(quantity * vol * convertCentimeter / 6000);\n      setVolumeWeightAirLB(quantity * vol * convertCentimeter / 6000 * 2.205);\n      setVolumeWeightSeaKG(quantity * vol * convertCentimeter / 1000);\n      setVolumeWeightSeaLB(quantity * vol * convertCentimeter / 1000 * 2.205);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"CBM Calculator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"radio\",\n      id: \"cubicM\",\n      checked: radio === \"cubicM\",\n      value: \"cubicM\",\n      onChange: e => setRadio(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"cubicM\",\n      children: \"Cubic Meter \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"radio\",\n      id: \"cubicF\",\n      checked: radio === \"cubicF\",\n      value: \"cubicF\",\n      onChange: e => setRadio(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"cubicF\",\n      children: \"Cubic Feet \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), data.map((item, key) => {\n      return /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"test\",\n          checked: key === current ? true : false,\n          onChange: e => handleChange(key),\n          value: key\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this), item.name]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: OptionValue,\n      style: {\n        width: \"100px\",\n        padding: 10\n      },\n      onChange: e => {\n        handleSelection(e);\n        calculate();\n      },\n      children: data[current].info.map((item, key) => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          children: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Unit of measurement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      style: styling,\n      value: OptionValue,\n      onChange: e => {\n        handleSelection(e);\n        calculate();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        disabled: true,\n        children: \"Select value\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"centi\",\n        children: \"cm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"mili\",\n        children: \"mm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"meter\",\n        children: \"meter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"inches\",\n        children: \"inches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"feet\",\n        children: \"feet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"yard\",\n        children: \"yard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Length \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      style: styling,\n      value: length,\n      onChange: e => setLength(+e.target.value),\n      onKeyUp: () => calculate()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Width \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      style: styling,\n      value: width,\n      onChange: e => setWidth(+e.target.value),\n      onKeyUp: () => calculate()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Height \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      style: styling,\n      value: height,\n      onChange: e => setHeight(+e.target.value),\n      onKeyUp: () => calculate()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Quantity\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      style: styling,\n      value: quantity,\n      onChange: e => setQuantity(+e.target.value),\n      onKeyUp: () => calculate()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \" Volume (Cubic Meter) \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      style: styling,\n      value: cubicVolume,\n      readOnly: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \" Volume (Cubic Feet) \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      style: styling,\n      value: cubicFeet,\n      readOnly: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \" Volume Weight Air (kg) \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      style: styling,\n      value: volumeWeightAirKG,\n      readOnly: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \" Volume Weight Air (lb) \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      style: styling,\n      value: volumeWeightAirLB,\n      readOnly: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \" Volume Weight Sea (kg) \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      style: styling,\n      value: volumeWeightSeaKG,\n      readOnly: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \" Volume Weight Sea (lb) \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      style: styling,\n      value: volumeWeightSeaLB,\n      readOnly: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"XSAhSac3p/dwjofwOxR9t7jdOH0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sparshgupta/Desktop/cbn/src/App.js"],"names":["React","useState","App","length","setLength","width","setWidth","height","setHeight","cubicVolume","setCubicVolume","OptionValue","setOptionValue","quantity","setQuantity","cubicFeet","setCubicFeet","volumeWeightAirKG","setVolumeWeightAirKG","volumeWeightAirLB","setVolumeWeightAirLB","volumeWeightSeaKG","setVolumeWeightSeaKG","volumeWeightSeaLB","setVolumeWeightSeaLB","radio","setRadio","data","name","info","handleSelection","e","reset","console","log","target","value","a","styling","padding","margin","boxSize","align","calculate","vol","convertMeter","convertFeet","convertCentimeter","Math","round","map","item","key","current","handleChange"],"mappings":"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","sourcesContent":["import React, {useState } from 'react'\nimport './App.css';\n\nfunction App() {\n  /**const handleChange = (e) => {\n    this.setState({selectedValue: e.target.value})\n    var x,y,z, D, k;\n    x = document.getElementById('length').value;\n    console.log(x);\n    y = document.getElementById('width').value;\n    z = document.getElementById('height').value;\n    D = document.getElementById('measurement').value; //can be event.target.value\n    if(D === \"centi\"){\n      k = x*y*z;\n     document.getElementById('vol').value = k\n    }\n  }\n  <button style = {styling} onClick={reset}>Reset</button> //keeping a buttons element for ref\n  **/\n  const [length, setLength] = useState(0);\n  const [width, setWidth] = useState(0);\n  const [height, setHeight] = useState(0);\n  const [cubicVolume, setCubicVolume] = useState(length * width * height);\n  const [OptionValue, setOptionValue] = useState(\"\");\n  const [quantity, setQuantity] = useState(1);\n  const [cubicFeet, setCubicFeet] = useState(0);\n  const [volumeWeightAirKG, setVolumeWeightAirKG] = useState(0);\n  const [volumeWeightAirLB, setVolumeWeightAirLB] = useState(0);\n  const [volumeWeightSeaKG, setVolumeWeightSeaKG] = useState(0);\n  const [volumeWeightSeaLB, setVolumeWeightSeaLB] = useState(0);\n  const [radio, setRadio] = useState(\"\");\n\n\n  const data = [\n    {\n      name: \"option1\",\n      info: [\"mm\",\"centi\", \"meter\"]\n    },\n    {\n      name: \"option2\",\n      info: [\"yard\", \"feet\", \"inches\"]\n    }\n    \n  ];\n  \n\n\n  const handleSelection = (e) => {\n    reset();\n    console.log(e.target.value);\n    var a = e.target.value;\n    setOptionValue(a);\n   \n  \n  }\n  const reset = () => {\n    setHeight(0);\n    setLength(0);\n    setWidth(0);\n    setCubicVolume(0);\n    setQuantity(1);\n    setOptionValue(\"\");\n\n  }\n\n  const styling = {\n    width: '20%',\n    padding: '12px' ,\n    margin: '8px' ,\n    boxSize: 'border-box',\n    align: 'center'\n  }\n\n  const calculate = () => {\n    if (OptionValue === \"mili\") {\n      let vol = length * width * height;\n      let convertMeter = 0.001 * 0.001 * 0.001;\n      let convertFeet = 0.0032*0.0032*0.0032;\n      let convertCentimeter = 0.1*0.1*0.1;\n      setCubicVolume(convertMeter * quantity * vol); \n      console.log(\"Cubic Volume mili \"+cubicVolume);\n      setCubicFeet(Math.round(convertFeet * quantity* vol));\n      setVolumeWeightAirKG((quantity*vol*convertCentimeter)/6000);\n      setVolumeWeightAirLB(((quantity*vol*convertCentimeter)/6000) *2.205);\n      setVolumeWeightSeaKG((quantity * vol*convertCentimeter)/1000);\n\n    }\n    if (OptionValue === \"centi\") {\n      let vol = length * width * height;\n      let convertMeter = 0.01 * 0.01 * 0.01;\n      let convertFeet = 0.032 * 0.032 * 0.032;\n      setCubicVolume(convertMeter * quantity* vol);\n      console.log(\"Cubic Volume centi \"+cubicVolume);\n      setCubicFeet(Math.round(convertFeet * quantity* vol ));\n      setVolumeWeightAirKG((quantity*vol)/6000);\n      setVolumeWeightAirLB(((quantity*vol)/6000) * 2.205);\n      setVolumeWeightSeaKG((quantity* vol)/1000);\n      setVolumeWeightSeaLB(((quantity* vol)/1000)*2.205);\n\n    }\n    if (OptionValue === \"meter\") {\n      let vol = length * width * height;\n      let convertCentimeter = 100*100*100;\n      let convertFeet = 3.281*3.281*3.281;\n      setCubicVolume(quantity * vol);\n      console.log(\"Cubic Volume meter \"+cubicVolume);\n      setCubicFeet(Math.round(convertFeet*quantity * vol));\n      setVolumeWeightAirKG((quantity*vol*convertCentimeter)/6000);\n      setVolumeWeightAirLB(((quantity*vol*convertCentimeter)/6000) *2.205);\n      setVolumeWeightSeaKG((quantity * vol*convertCentimeter)/1000);\n      setVolumeWeightSeaLB(((quantity * vol*convertCentimeter)/1000) *2.205);\n\n    }\n    if (OptionValue === \"inches\") {\n      let vol = length * width * height;\n      let convertCentimeter = 2.54*2.54*2.54;\n      let convertFeet = 0.08*0.08*0.08;\n      let convertMeter = 0.025*0.025*0.025;\n      setCubicVolume(quantity * vol *convertMeter);\n      console.log(\"Cubic Volume meter \"+cubicVolume);\n      setCubicFeet(Math.round(convertFeet*quantity * vol));\n      setVolumeWeightAirKG((quantity*vol*convertCentimeter)/6000);\n      setVolumeWeightAirLB(((quantity*vol*convertCentimeter)/6000) *2.205);\n      setVolumeWeightSeaKG((quantity * vol*convertCentimeter)/1000);\n      setVolumeWeightSeaLB(((quantity * vol*convertCentimeter)/1000) *2.205);\n\n    }\n    if (OptionValue === \"feet\") {\n      let vol = length * width * height;\n      let convertCentimeter = 30.48*30.48*30.48;      \n      let convertMeter = 0.30*0.30*0.30;\n      setCubicVolume(quantity * vol *convertMeter);\n      console.log(\"Cubic Volume meter \"+cubicVolume);\n      setCubicFeet(Math.round(quantity * vol));\n      setVolumeWeightAirKG((quantity*vol*convertCentimeter)/6000);\n      setVolumeWeightAirLB(((quantity*vol*convertCentimeter)/6000) *2.205);\n      setVolumeWeightSeaKG((quantity * vol*convertCentimeter)/1000);\n      setVolumeWeightSeaLB(((quantity * vol*convertCentimeter)/1000) *2.205);\n\n    }\n    if (OptionValue === \"yard\") {\n      let vol = length * width * height;\n      let convertCentimeter = 91.44*91.44*91.44;      \n      let convertMeter = 0.91*0.91*0.91;\n      let convertFeet = 3*3*3;\n      setCubicVolume(quantity * vol *convertMeter);\n      console.log(\"Cubic Volume meter \"+cubicVolume);\n      setCubicFeet(Math.round(quantity * vol*convertFeet));\n      setVolumeWeightAirKG((quantity*vol*convertCentimeter)/6000);\n      setVolumeWeightAirLB(((quantity*vol*convertCentimeter)/6000) *2.205);\n      setVolumeWeightSeaKG((quantity * vol*convertCentimeter)/1000);\n      setVolumeWeightSeaLB(((quantity * vol*convertCentimeter)/1000) *2.205);\n\n    }\n\n  }\n\n\n  return (\n    <div className=\"App\">\n    <label><h2>CBM Calculator</h2></label>\n    \n      <input type=\"radio\"  id = \"cubicM\" checked = {radio === \"cubicM\"} value=\"cubicM\"  onChange = {e => setRadio(e.target.value)} />\n      <label for= \"cubicM\">Cubic Meter </label>\n      <br></br>\n      <input type=\"radio\" id= \"cubicF\" checked = {radio === \"cubicF\"} value=\"cubicF\" onChange = {e => setRadio(e.target.value)} />\n      <label for= \"cubicF\">Cubic Feet </label>\n      <br></br>\n\n      \n      {data.map((item, key) => {\n        return (\n          <label key={key}>\n            <input\n              type=\"radio\"\n              name=\"test\"\n              checked={key === current ? true : false}\n              onChange={(e) => handleChange(key)}\n              value={key}\n            />\n            {item.name}\n          </label>\n        );\n      })}\n\n       <select\n        value={OptionValue}\n        style={{ width: \"100px\", padding: 10 }}\n        onChange= {e => {handleSelection(e); calculate()} }\n      >\n        {data[current].info.map((item, key) => {\n          return <option>{item}</option>;\n        })}\n      </select>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    <label>Unit of measurement</label>\n    <select style= {styling} value = {OptionValue} onChange= { e => {handleSelection(e); calculate()} } >\n    <option value = \"\" disabled>Select value</option>\n     <option value = \"centi\">cm</option>\n     <option value = \"mili\">mm</option>\n     <option value = \"meter\">meter</option>\n     <option value = \"inches\">inches</option>\n     <option value = \"feet\">feet</option>\n     <option value = \"yard\">yard</option>\n    </select>\n\n      <br/>\n      <label>Length </label>\n      <input type=\"number\" style = {styling} value={length} onChange={e => setLength(+e.target.value)} onKeyUp = { () => calculate()}/>\n      <br/>\n      <label>Width </label>\n      <input type=\"number\" style = {styling} value={width} onChange={e => setWidth(+e.target.value)} onKeyUp = { () => calculate()}/>\n      <br/>\n      <label>Height </label>\n      <input type=\"number\" style = {styling} value={height} onChange={e => setHeight(+e.target.value)} onKeyUp = { () => calculate()}/>\n      <br/>\n      \n      <label>Quantity</label>\n      <input type=\"number\" style = {styling} value={quantity} onChange={e => setQuantity(+e.target.value)} onKeyUp = { () => calculate()}/>\n      <br/>\n      <label> Volume (Cubic Meter) </label>\n      <input type=\"number\" style = {styling} value={cubicVolume} readOnly={true} />\n      <br/>\n      \n      <label> Volume (Cubic Feet) </label>\n      <input type=\"number\" style = {styling} value={cubicFeet} readOnly={true} />\n      <br/>\n      \n      <label> Volume Weight Air (kg) </label>\n      <input type=\"number\" style = {styling} value={volumeWeightAirKG} readOnly={true} />\n      <br>\n      </br>\n      <label> Volume Weight Air (lb) </label>\n      <input type=\"number\" style = {styling} value={volumeWeightAirLB} readOnly={true} />\n      <br/>\n     \n      <label> Volume Weight Sea (kg) </label>\n      <input type=\"number\" style = {styling} value={volumeWeightSeaKG} readOnly={true} />\n      <br/>\n      <label> Volume Weight Sea (lb) </label>\n      <input type=\"number\" style = {styling} value={volumeWeightSeaLB} readOnly={true} />\n      <br/>\n    \n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}