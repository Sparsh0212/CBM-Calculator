{"ast":null,"code":"var _jsxFileName = \"/Users/sparshgupta/Desktop/cbn/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  /**const handleChange = (e) => {\n    this.setState({selectedValue: e.target.value})\n    var x,y,z, D, k;\n    x = document.getElementById('length').value;\n    console.log(x);\n    y = document.getElementById('width').value;\n    z = document.getElementById('height').value;\n    D = document.getElementById('measurement').value; //can be event.target.value\n    if(D === \"centi\"){\n      k = x*y*z;\n     document.getElementById('vol').value = k\n    }\n  }\n  **/\n  const [length, setLength] = useState(0);\n  const [width, setWidth] = useState(0);\n  const [height, setHeight] = useState(0);\n  const [cubicVolume, setCubicVolume] = useState(length * width * height);\n  const [OptionValue, setOptionValue] = useState(\"\");\n\n  const handleSelection = e => {\n    console.log(e.target.value);\n    setOptionValue(e.target.value);\n    console.log(\"--------\");\n    console.log(JSON.stringify(OptionValue));\n\n    if (OptionValue === \"mili\") {\n      //console.log(OptionValue)\n      setCubicVolume(0.001 * 0.001 * 0.001 * length * width * height); // check for the previous option value\n\n      console.log(cubicVolume);\n    }\n\n    if (OptionValue === \"centi\") {\n      //console.log(OptionValue)\n      setCubicVolume(0.01 * 0.01 * 0.01 * length * width * height);\n      console.log(cubicVolume);\n    }\n\n    if (OptionValue === \"meter\") {\n      //console.log(OptionValue)\n      setCubicVolume(length * width * height);\n      console.log(cubicVolume);\n    }\n  };\n\n  const reset = () => {\n    setHeight(0);\n    setLength(0);\n    setWidth(0);\n    setCubicVolume(0);\n    setOptionValue(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \" Unit of measurement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"measurement\",\n      onChange: e => handleSelection(),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        disabled: true,\n        selected: true,\n        children: \"Select your Unit of measurement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"centi\",\n        children: \"cm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"mili\",\n        children: \"mm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"meter\",\n        children: \"m\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Length \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: length,\n      onChange: e => setLength(+e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Width \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: width,\n      onChange: e => setWidth(+e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Height \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: height,\n      onChange: e => setHeight(+e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \" Volume (Cubic Meter) \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: cubicVolume,\n      readOnly: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: reset,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ChVw9yPDrwzLqTeMVF8iXFhFPqY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sparshgupta/Desktop/cbn/src/App.js"],"names":["React","useState","App","length","setLength","width","setWidth","height","setHeight","cubicVolume","setCubicVolume","OptionValue","setOptionValue","handleSelection","e","console","log","target","value","JSON","stringify","reset"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport './App.css';\n\nfunction App() {\n  /**const handleChange = (e) => {\n    this.setState({selectedValue: e.target.value})\n    var x,y,z, D, k;\n    x = document.getElementById('length').value;\n    console.log(x);\n    y = document.getElementById('width').value;\n    z = document.getElementById('height').value;\n    D = document.getElementById('measurement').value; //can be event.target.value\n    if(D === \"centi\"){\n      k = x*y*z;\n     document.getElementById('vol').value = k\n    }\n  }\n  **/\n const [length, setLength] = useState(0);\n const [width, setWidth] = useState(0);\n const [height, setHeight] = useState(0);\n const [cubicVolume, setCubicVolume] = useState(length*width*height);\n const [OptionValue, setOptionValue] = useState(\"\");  \n\n\n const handleSelection = (e) => {\n   console.log(e.target.value);\n   setOptionValue(e.target.value);\n   console.log(\"--------\");\n   console.log(JSON.stringify(OptionValue));\n   if(OptionValue === \"mili\"){\n    //console.log(OptionValue)\n     setCubicVolume(0.001*0.001*0.001*length*width*height);  // check for the previous option value\n     console.log(cubicVolume);\n\n   }\n   if(OptionValue === \"centi\"){\n    //console.log(OptionValue)\n     setCubicVolume(0.01*0.01*0.01*length*width*height);\n     console.log(cubicVolume);\n\n  }\n  if(OptionValue === \"meter\"){\n    //console.log(OptionValue)\n    setCubicVolume(length*width*height);\n    console.log(cubicVolume);\n\n  }\n   \n }\nconst reset = () => {\n  setHeight(0);\n  setLength(0);\n  setWidth(0);\n  setCubicVolume(0);\n  setOptionValue(\"\");\n\n}\n\n \n\n\n  return (\n    <div className=\"App\">\n      <label> Unit of measurement</label>\n      <select id = \"measurement\"   onChange = { e => handleSelection()} >\n        <option value=\"\" disabled selected>Select your Unit of measurement</option>\n        <option value= \"centi\">cm</option>\n        <option value = \"mili\">mm</option>\n        <option value = \"meter\">m</option>\n      </select>\n      <br></br>\n    <label>Length </label>\n    <input type= \"number\" value = {length} onChange = {e => setLength(+e.target.value)}  />\n    <br></br>\n    <label>Width </label>\n    <input type= \"number\" value = {width} onChange = {e => setWidth(+e.target.value)}/>\n    <br></br>\n    <label>Height </label>\n    <input type= \"number\" value = {height}  onChange = {e => setHeight(+e.target.value)}/>\n    <br>\n    </br>\n    <label> Volume (Cubic Meter) </label>\n    <input type= \"number\" value = {cubicVolume} readOnly = {true}/>\n    <br>\n    </br>\n    <button onClick = {reset}>Reset</button>\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}