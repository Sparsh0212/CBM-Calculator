{"ast":null,"code":"var _jsxFileName = \"/Users/sparshgupta/Desktop/cbn/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  /**const handleChange = (e) => {\n    this.setState({selectedValue: e.target.value})\n    var x,y,z, D, k;\n    x = document.getElementById('length').value;\n    console.log(x);\n    y = document.getElementById('width').value;\n    z = document.getElementById('height').value;\n    D = document.getElementById('measurement').value; //can be event.target.value\n    if(D === \"centi\"){\n      k = x*y*z;\n     document.getElementById('vol').value = k\n    }\n  }\n  **/\n  const [length, setLength] = useState(0);\n  const [width, setWidth] = useState(0);\n  const [height, setHeight] = useState(0);\n  const [cubicVolume, setCubicVolume] = useState(length * width * height);\n  const [OptionValue, setOptionValue] = useState(\"\");\n\n  const handleSelection = e => {\n    console.log(e.target.value);\n    var a = e.target.value;\n    setOptionValue(a);\n    console.log(\"-------- a \" + a);\n    console.log(OptionValue);\n  };\n\n  const reset = () => {\n    setHeight(0);\n    setLength(0);\n    setWidth(0);\n    setCubicVolume(0);\n    setOptionValue(\"\");\n  };\n\n  const styling = {\n    width: '30%',\n    padding: '12px',\n    margin: '8px',\n    boxSize: 'border-box',\n    align: 'center'\n  };\n\n  const getVolume = () => {\n    if (OptionValue === \"mili\") {\n      //console.log(OptionValue)\n      setCubicVolume(0.001 * 0.001 * 0.001 * length * width * height); // check for the previous option value\n\n      console.log(cubicVolume);\n    }\n\n    if (OptionValue === \"centi\") {\n      //console.log(OptionValue)\n      setCubicVolume(0.01 * 0.01 * 0.01 * length * width * height);\n      console.log(cubicVolume);\n    }\n\n    if (OptionValue === \"meter\") {\n      //console.log(OptionValue)\n      setCubicVolume(length * width * height);\n      console.log(cubicVolume);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      style: styling,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"mili\",\n        children: \"mm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"centi\",\n        children: \"cm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"meter\",\n        children: \"m\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Length \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      style: styling,\n      value: length,\n      onChange: e => setLength(+e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Width \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      style: styling,\n      value: width,\n      onChange: e => setWidth(+e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Height \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      style: styling,\n      value: height,\n      onChange: e => setHeight(+e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \" Volume (Cubic Meter) \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      style: styling,\n      value: cubicVolume,\n      readOnly: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: styling,\n      onClick: reset,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: styling,\n      onClick: getVolume,\n      children: \"Calculate Volume\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Rg2UaZolG79wBBEcMAjZuTgoUcc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sparshgupta/Desktop/cbn/src/App.js"],"names":["React","useEffect","useState","App","length","setLength","width","setWidth","height","setHeight","cubicVolume","setCubicVolume","OptionValue","setOptionValue","handleSelection","e","console","log","target","value","a","reset","styling","padding","margin","boxSize","align","getVolume"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport './App.css';\n\nfunction App() {\n  /**const handleChange = (e) => {\n    this.setState({selectedValue: e.target.value})\n    var x,y,z, D, k;\n    x = document.getElementById('length').value;\n    console.log(x);\n    y = document.getElementById('width').value;\n    z = document.getElementById('height').value;\n    D = document.getElementById('measurement').value; //can be event.target.value\n    if(D === \"centi\"){\n      k = x*y*z;\n     document.getElementById('vol').value = k\n    }\n  }\n  **/\n  const [length, setLength] = useState(0);\n  const [width, setWidth] = useState(0);\n  const [height, setHeight] = useState(0);\n  const [cubicVolume, setCubicVolume] = useState(length * width * height);\n  const [OptionValue, setOptionValue] = useState(\"\");\n\n\n  const handleSelection = (e) => {\n\n    console.log(e.target.value);\n    var a = e.target.value;\n    setOptionValue(a);\n    console.log(\"-------- a \" + a);\n    console.log(OptionValue);\n\n    \n    \n\n\n\n  }\n  const reset = () => {\n    setHeight(0);\n    setLength(0);\n    setWidth(0);\n    setCubicVolume(0);\n    setOptionValue(\"\");\n\n  }\n\n  const styling = {\n    width: '30%',\n    padding: '12px' ,\n    margin: '8px' ,\n    boxSize: 'border-box',\n    align: 'center'\n  }\n\n  const getVolume = () => {\n    \n    if (OptionValue === \"mili\") {\n      //console.log(OptionValue)\n      setCubicVolume(0.001 * 0.001 * 0.001 * length * width * height);  // check for the previous option value\n      console.log(cubicVolume);\n\n    }\n    if (OptionValue === \"centi\") {\n      //console.log(OptionValue)\n      setCubicVolume(0.01 * 0.01 * 0.01 * length * width * height);\n      console.log(cubicVolume);\n\n    }\n    if (OptionValue === \"meter\") {\n      //console.log(OptionValue)\n      setCubicVolume(length * width * height);\n      console.log(cubicVolume);\n\n    }\n  }\n\n\n\n\n  return (\n    <div className=\"App\">\n      <select style = {styling} >\n        <option value = \"mili\">mm</option>\n        <option value = \"centi\">cm</option>\n        <option value = \"meter\">m</option>\n      </select>\n       \n      <br></br>\n      <label>Length </label>\n      <input type=\"number\" style = {styling} value={length} onChange={e => setLength(+e.target.value)} />\n      <br></br>\n      <label>Width </label>\n      <input type=\"number\" style = {styling} value={width} onChange={e => setWidth(+e.target.value)} />\n      <br></br>\n      <label>Height </label>\n      <input type=\"number\" style = {styling} value={height} onChange={e => setHeight(+e.target.value)} />\n      <br>\n      </br>\n      <label> Volume (Cubic Meter) </label>\n      <input type=\"number\" style = {styling} value={cubicVolume} readOnly={true} />\n      <br>\n      </br>\n      <button style = {styling} onClick={reset}>Reset</button>\n      <button style = {styling} onClick={getVolume}>Calculate Volume</button>\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}