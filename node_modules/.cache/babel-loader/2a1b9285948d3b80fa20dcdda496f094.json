{"ast":null,"code":"var _jsxFileName = \"/Users/sparshgupta/Desktop/cbn/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  /**const handleChange = (e) => {\n    this.setState({selectedValue: e.target.value})\n    var x,y,z, D, k;\n    x = document.getElementById('length').value;\n    console.log(x);\n    y = document.getElementById('width').value;\n    z = document.getElementById('height').value;\n    D = document.getElementById('measurement').value; //can be event.target.value\n    if(D === \"centi\"){\n      k = x*y*z;\n     document.getElementById('vol').value = k\n    }\n  }\n  <button style = {styling} onClick={reset}>Reset</button> //keeping a buttons element for ref\n  **/\n  const [length, setLength] = useState(0);\n  const [width, setWidth] = useState(0);\n  const [height, setHeight] = useState(0);\n  const [cubicVolume, setCubicVolume] = useState(length * width * height);\n  const [OptionValue, setOptionValue] = useState(\"\");\n  const [quantity, setQuantity] = useState(1);\n  const [cubicFeet, setCubicFeet] = useState(0);\n  const [volumeWeightAirKG, setVolumeWeightAirKG] = useState(0);\n  const [volumeWeightAirLB, setVolumeWeightAirLB] = useState(0);\n  const [volumeWeightSeaKG, setVolumeWeightSeaKG] = useState(0);\n\n  const handleSelection = e => {\n    reset();\n    console.log(e.target.value);\n    var a = e.target.value;\n    setOptionValue(a);\n  };\n\n  const reset = () => {\n    setHeight(0);\n    setLength(0);\n    setWidth(0);\n    setCubicVolume(0);\n    setQuantity(1);\n    setOptionValue(\"\");\n  };\n\n  const styling = {\n    width: '30%',\n    padding: '12px',\n    margin: '8px',\n    boxSize: 'border-box',\n    align: 'center'\n  };\n\n  const calculate = () => {\n    if (OptionValue === \"mili\") {\n      let vol = length * width * height;\n      let convertMeter = 0.001 * 0.001 * 0.001;\n      let convertFeet = 0.0032 * 0.0032 * 0.0032;\n      let convertCentimeter = 0.1 * 0.1 * 0.1;\n      setCubicVolume(convertMeter * quantity * vol);\n      console.log(\"Cubic Volume mili \" + cubicVolume);\n      setCubicFeet(Math.round(convertFeet * quantity * vol));\n      setVolumeWeightAirKG(quantity * vol * convertCentimeter / 6000);\n      setVolumeWeightAirLB(quantity * vol * convertCentimeter / 6000 * 2.205);\n      setVolumeWeightSeaKG(quantity * vol / 1000);\n    }\n\n    if (OptionValue === \"centi\") {\n      let vol = length * width * height;\n      let convertMeter = 0.01 * 0.01 * 0.01;\n      let convertFeet = 0.032 * 0.032 * 0.032;\n      setCubicVolume(convertMeter * quantity * vol);\n      console.log(\"Cubic Volume centi \" + cubicVolume);\n      setCubicFeet(Math.round(convertFeet * quantity * vol));\n      setVolumeWeightAirKG(quantity * vol / 6000);\n      setVolumeWeightAirLB(quantity * vol / 6000 * 2.205);\n      setVolumeWeightSeaKG(quantity * vol / 1000);\n    }\n\n    if (OptionValue === \"meter\") {\n      let vol = length * width * height;\n      let convertCentimeter = 100 * 100 * 100;\n      let convertFeet = 3.281 * 3.281 * 3.281;\n      setCubicVolume(quantity * vol);\n      console.log(\"Cubic Volume meter \" + cubicVolume);\n      setCubicFeet(Math.round(convertFeet * quantity * vol));\n      setVolumeWeightAirKG(quantity * vol * convertCentimeter / 6000);\n      setVolumeWeightAirLB(quantity * vol * convertCentimeter / 6000 * 2.205);\n      setVolumeWeightSeaKG(quantity * vol / 1000);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"CBM Calculator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Cubic Meter \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"radio\",\n      style: styling,\n      value: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Cubic Meter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"radio\",\n      style: styling,\n      value: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Cubic Feet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), \"\\xA0   \", /*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"css\",\n      children: \"CSS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Unit of measurement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      style: styling,\n      value: OptionValue,\n      onChange: e => {\n        handleSelection(e);\n        calculate();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        disabled: true,\n        children: \"Select value\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"centi\",\n        children: \"cm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"mili\",\n        children: \"mm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"meter\",\n        children: \"meter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Length \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      style: styling,\n      value: length,\n      onChange: e => setLength(+e.target.value),\n      onKeyUp: () => calculate()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Width \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      style: styling,\n      value: width,\n      onChange: e => setWidth(+e.target.value),\n      onKeyUp: () => calculate()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Height \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      style: styling,\n      value: height,\n      onChange: e => setHeight(+e.target.value),\n      onKeyUp: () => calculate()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Quantity\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      style: styling,\n      value: quantity,\n      onChange: e => setQuantity(+e.target.value),\n      onKeyUp: () => calculate()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \" Volume (Cubic Meter) \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      style: styling,\n      value: cubicVolume,\n      readOnly: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \" Volume (Cubic Feet) \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      style: styling,\n      value: cubicFeet,\n      readOnly: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \" Volume Weight Air (kg) \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      style: styling,\n      value: volumeWeightAirKG,\n      readOnly: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \" Volume Weight Air (lb) \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      style: styling,\n      value: volumeWeightAirLB,\n      readOnly: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \" Volume Weight Sea (kg) \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      style: styling,\n      value: volumeWeightSeaKG,\n      readOnly: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"A1khsWpU4QdP6ceE8cCQAg2UkwY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sparshgupta/Desktop/cbn/src/App.js"],"names":["React","useState","App","length","setLength","width","setWidth","height","setHeight","cubicVolume","setCubicVolume","OptionValue","setOptionValue","quantity","setQuantity","cubicFeet","setCubicFeet","volumeWeightAirKG","setVolumeWeightAirKG","volumeWeightAirLB","setVolumeWeightAirLB","volumeWeightSeaKG","setVolumeWeightSeaKG","handleSelection","e","reset","console","log","target","value","a","styling","padding","margin","boxSize","align","calculate","vol","convertMeter","convertFeet","convertCentimeter","Math","round"],"mappings":"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","sourcesContent":["import React, {useState } from 'react'\nimport './App.css';\n\nfunction App() {\n  /**const handleChange = (e) => {\n    this.setState({selectedValue: e.target.value})\n    var x,y,z, D, k;\n    x = document.getElementById('length').value;\n    console.log(x);\n    y = document.getElementById('width').value;\n    z = document.getElementById('height').value;\n    D = document.getElementById('measurement').value; //can be event.target.value\n    if(D === \"centi\"){\n      k = x*y*z;\n     document.getElementById('vol').value = k\n    }\n  }\n  <button style = {styling} onClick={reset}>Reset</button> //keeping a buttons element for ref\n  **/\n  const [length, setLength] = useState(0);\n  const [width, setWidth] = useState(0);\n  const [height, setHeight] = useState(0);\n  const [cubicVolume, setCubicVolume] = useState(length * width * height);\n  const [OptionValue, setOptionValue] = useState(\"\");\n  const [quantity, setQuantity] = useState(1);\n  const [cubicFeet, setCubicFeet] = useState(0);\n  const [volumeWeightAirKG, setVolumeWeightAirKG] = useState(0);\n  const [volumeWeightAirLB, setVolumeWeightAirLB] = useState(0);\n  const [volumeWeightSeaKG, setVolumeWeightSeaKG] = useState(0);\n\n\n  const handleSelection = (e) => {\n    reset();\n    console.log(e.target.value);\n    var a = e.target.value;\n    setOptionValue(a);\n   \n  \n  }\n  const reset = () => {\n    setHeight(0);\n    setLength(0);\n    setWidth(0);\n    setCubicVolume(0);\n    setQuantity(1);\n    setOptionValue(\"\");\n\n  }\n\n  const styling = {\n    width: '30%',\n    padding: '12px' ,\n    margin: '8px' ,\n    boxSize: 'border-box',\n    align: 'center'\n  }\n\n  const calculate = () => {\n    if (OptionValue === \"mili\") {\n      let vol = length * width * height;\n      let convertMeter = 0.001 * 0.001 * 0.001;\n      let convertFeet = 0.0032*0.0032*0.0032;\n      let convertCentimeter = 0.1*0.1*0.1;\n      setCubicVolume(convertMeter * quantity * vol); \n      console.log(\"Cubic Volume mili \"+cubicVolume);\n      setCubicFeet(Math.round(convertFeet * quantity* vol));\n      setVolumeWeightAirKG((quantity*vol*convertCentimeter)/6000);\n      setVolumeWeightAirLB(((quantity*vol*convertCentimeter)/6000) *2.205);\n      setVolumeWeightSeaKG((quantity * vol)/1000);\n\n    }\n    if (OptionValue === \"centi\") {\n      let vol = length * width * height;\n      let convertMeter = 0.01 * 0.01 * 0.01;\n      let convertFeet = 0.032 * 0.032 * 0.032;\n      setCubicVolume(convertMeter * quantity* vol);\n      console.log(\"Cubic Volume centi \"+cubicVolume);\n      setCubicFeet(Math.round(convertFeet * quantity* vol ));\n      setVolumeWeightAirKG((quantity*vol)/6000);\n      setVolumeWeightAirLB(((quantity*vol)/6000) * 2.205);\n      setVolumeWeightSeaKG((quantity* vol)/1000);\n\n    }\n    if (OptionValue === \"meter\") {\n      let vol = length * width * height;\n      let convertCentimeter = 100*100*100;\n      let convertFeet = 3.281*3.281*3.281;\n      setCubicVolume(quantity * vol);\n      console.log(\"Cubic Volume meter \"+cubicVolume);\n      setCubicFeet(Math.round(convertFeet*quantity * vol));\n      setVolumeWeightAirKG((quantity*vol*convertCentimeter)/6000);\n      setVolumeWeightAirLB(((quantity*vol*convertCentimeter)/6000) *2.205);\n      setVolumeWeightSeaKG((quantity * vol)/1000);\n\n    }\n\n  }\n\n\n  return (\n    <div className=\"App\">\n    <label><h2>CBM Calculator</h2></label>\n    <label>Cubic Meter </label>\n      <input type=\"radio\" style = {styling} value=\"\" />\n      <label>Cubic Meter</label>\n      <br></br>\n      <input type=\"radio\" style = {styling} value=\"\" />\n      <label>Cubic Feet</label>\n      <br></br>\n    <label for=\"css\">CSS</label><br></br>\n    <label>Unit of measurement</label>\n    <select style= {styling} value = {OptionValue} onChange= { e => {handleSelection(e); calculate()} } >\n    <option value = \"\" disabled>Select value</option>\n     <option value = \"centi\">cm</option>\n     <option value = \"mili\">mm</option>\n     <option value = \"meter\">meter</option>\n    </select>\n\n       \n      <br></br>\n      <label>Length </label>\n      <input type=\"number\" style = {styling} value={length} onChange={e => setLength(+e.target.value)} onKeyUp = { () => calculate()}/>\n      <br></br>\n      <label>Width </label>\n      <input type=\"number\" style = {styling} value={width} onChange={e => setWidth(+e.target.value)} onKeyUp = { () => calculate()}/>\n      <br></br>\n      <label>Height </label>\n      <input type=\"number\" style = {styling} value={height} onChange={e => setHeight(+e.target.value)} onKeyUp = { () => calculate()}/>\n      <br>\n      </br>\n      <label>Quantity</label>\n      <input type=\"number\" style = {styling} value={quantity} onChange={e => setQuantity(+e.target.value)} onKeyUp = { () => calculate()}/>\n      <br></br>\n      <label> Volume (Cubic Meter) </label>\n      <input type=\"number\" style = {styling} value={cubicVolume} readOnly={true} />\n      <br>\n      </br>\n      <label> Volume (Cubic Feet) </label>\n      <input type=\"number\" style = {styling} value={cubicFeet} readOnly={true} />\n      <br>\n      </br>\n      <label> Volume Weight Air (kg) </label>\n      <input type=\"number\" style = {styling} value={volumeWeightAirKG} readOnly={true} />\n      <br>\n      </br>\n      <label> Volume Weight Air (lb) </label>\n      <input type=\"number\" style = {styling} value={volumeWeightAirLB} readOnly={true} />\n      <br>\n      </br>\n      <label> Volume Weight Sea (kg) </label>\n      <input type=\"number\" style = {styling} value={volumeWeightSeaKG} readOnly={true} />\n      <br>\n      </br>\n    \n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}